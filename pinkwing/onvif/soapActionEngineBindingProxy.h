/* soapActionEngineBindingProxy.h
   Generated by gSOAP 2.8.134 for samples/onvif/onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2024, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapActionEngineBindingProxy_H
#define soapActionEngineBindingProxy_H
#include "soapH.h"

    class SOAP_CMAC ActionEngineBindingProxy {
      public:
        /// Context to manage proxy IO and data
        struct soap *soap;
        /// flag indicating that this context is owned by this proxy and should be deleted by the destructor
        bool soap_own;
        /// Endpoint URL of service 'ActionEngineBindingProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in samples/onvif/onvif.h, if any
        /// Construct a proxy with new managing context
        ActionEngineBindingProxy();
        /// Copy constructor
        ActionEngineBindingProxy(const ActionEngineBindingProxy& rhs);
        /// Construct proxy given a shared managing context
        ActionEngineBindingProxy(struct soap*);
        /// Construct proxy given a shared managing context and endpoint URL
        ActionEngineBindingProxy(struct soap*, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        ActionEngineBindingProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        ActionEngineBindingProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        ActionEngineBindingProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        ActionEngineBindingProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context, when the context was allocated by the constructor
        virtual ~ActionEngineBindingProxy();
        /// Initializer used by constructors
        virtual void ActionEngineBindingProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual ActionEngineBindingProxy *copy();
        /// Copy assignment
        ActionEngineBindingProxy& operator=(const ActionEngineBindingProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Add SOAP Header to message
        virtual void soap_header(struct _wsse__Security *wsse__Security, char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance);
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'GetSupportedActions' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetSupportedActions(_ns3__GetSupportedActions *ns3__GetSupportedActions, _ns3__GetSupportedActionsResponse &ns3__GetSupportedActionsResponse) { return this->GetSupportedActions(NULL, NULL, ns3__GetSupportedActions, ns3__GetSupportedActionsResponse); }
        /// Web service synchronous operation 'GetSupportedActions' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetSupportedActions(const char *soap_endpoint_url, const char *soap_action, _ns3__GetSupportedActions *ns3__GetSupportedActions, _ns3__GetSupportedActionsResponse &ns3__GetSupportedActionsResponse) { return this->send_GetSupportedActions(soap_endpoint_url, soap_action, ns3__GetSupportedActions) || this->recv_GetSupportedActions(ns3__GetSupportedActionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetSupportedActions' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetSupportedActions(const char *soap_endpoint_url, const char *soap_action, _ns3__GetSupportedActions *ns3__GetSupportedActions);
        /// Web service asynchronous operation 'recv_GetSupportedActions' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetSupportedActions(_ns3__GetSupportedActionsResponse &ns3__GetSupportedActionsResponse);
        //
        /// Web service synchronous operation 'GetActions' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetActions(_ns3__GetActions *ns3__GetActions, _ns3__GetActionsResponse &ns3__GetActionsResponse) { return this->GetActions(NULL, NULL, ns3__GetActions, ns3__GetActionsResponse); }
        /// Web service synchronous operation 'GetActions' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetActions(const char *soap_endpoint_url, const char *soap_action, _ns3__GetActions *ns3__GetActions, _ns3__GetActionsResponse &ns3__GetActionsResponse) { return this->send_GetActions(soap_endpoint_url, soap_action, ns3__GetActions) || this->recv_GetActions(ns3__GetActionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetActions' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetActions(const char *soap_endpoint_url, const char *soap_action, _ns3__GetActions *ns3__GetActions);
        /// Web service asynchronous operation 'recv_GetActions' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetActions(_ns3__GetActionsResponse &ns3__GetActionsResponse);
        //
        /// Web service synchronous operation 'CreateActions' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CreateActions(_ns3__CreateActions *ns3__CreateActions, _ns3__CreateActionsResponse &ns3__CreateActionsResponse) { return this->CreateActions(NULL, NULL, ns3__CreateActions, ns3__CreateActionsResponse); }
        /// Web service synchronous operation 'CreateActions' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CreateActions(const char *soap_endpoint_url, const char *soap_action, _ns3__CreateActions *ns3__CreateActions, _ns3__CreateActionsResponse &ns3__CreateActionsResponse) { return this->send_CreateActions(soap_endpoint_url, soap_action, ns3__CreateActions) || this->recv_CreateActions(ns3__CreateActionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CreateActions' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CreateActions(const char *soap_endpoint_url, const char *soap_action, _ns3__CreateActions *ns3__CreateActions);
        /// Web service asynchronous operation 'recv_CreateActions' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CreateActions(_ns3__CreateActionsResponse &ns3__CreateActionsResponse);
        //
        /// Web service synchronous operation 'DeleteActions' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteActions(_ns3__DeleteActions *ns3__DeleteActions, _ns3__DeleteActionsResponse &ns3__DeleteActionsResponse) { return this->DeleteActions(NULL, NULL, ns3__DeleteActions, ns3__DeleteActionsResponse); }
        /// Web service synchronous operation 'DeleteActions' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteActions(const char *soap_endpoint_url, const char *soap_action, _ns3__DeleteActions *ns3__DeleteActions, _ns3__DeleteActionsResponse &ns3__DeleteActionsResponse) { return this->send_DeleteActions(soap_endpoint_url, soap_action, ns3__DeleteActions) || this->recv_DeleteActions(ns3__DeleteActionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DeleteActions' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DeleteActions(const char *soap_endpoint_url, const char *soap_action, _ns3__DeleteActions *ns3__DeleteActions);
        /// Web service asynchronous operation 'recv_DeleteActions' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DeleteActions(_ns3__DeleteActionsResponse &ns3__DeleteActionsResponse);
        //
        /// Web service synchronous operation 'ModifyActions' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ModifyActions(_ns3__ModifyActions *ns3__ModifyActions, _ns3__ModifyActionsResponse &ns3__ModifyActionsResponse) { return this->ModifyActions(NULL, NULL, ns3__ModifyActions, ns3__ModifyActionsResponse); }
        /// Web service synchronous operation 'ModifyActions' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ModifyActions(const char *soap_endpoint_url, const char *soap_action, _ns3__ModifyActions *ns3__ModifyActions, _ns3__ModifyActionsResponse &ns3__ModifyActionsResponse) { return this->send_ModifyActions(soap_endpoint_url, soap_action, ns3__ModifyActions) || this->recv_ModifyActions(ns3__ModifyActionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ModifyActions' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ModifyActions(const char *soap_endpoint_url, const char *soap_action, _ns3__ModifyActions *ns3__ModifyActions);
        /// Web service asynchronous operation 'recv_ModifyActions' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ModifyActions(_ns3__ModifyActionsResponse &ns3__ModifyActionsResponse);
        //
        /// Web service synchronous operation 'GetServiceCapabilities' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetServiceCapabilities(_ns3__GetServiceCapabilities *ns3__GetServiceCapabilities, _ns3__GetServiceCapabilitiesResponse &ns3__GetServiceCapabilitiesResponse) { return this->GetServiceCapabilities(NULL, NULL, ns3__GetServiceCapabilities, ns3__GetServiceCapabilitiesResponse); }
        /// Web service synchronous operation 'GetServiceCapabilities' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _ns3__GetServiceCapabilities *ns3__GetServiceCapabilities, _ns3__GetServiceCapabilitiesResponse &ns3__GetServiceCapabilitiesResponse) { return this->send_GetServiceCapabilities(soap_endpoint_url, soap_action, ns3__GetServiceCapabilities) || this->recv_GetServiceCapabilities(ns3__GetServiceCapabilitiesResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetServiceCapabilities' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _ns3__GetServiceCapabilities *ns3__GetServiceCapabilities);
        /// Web service asynchronous operation 'recv_GetServiceCapabilities' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetServiceCapabilities(_ns3__GetServiceCapabilitiesResponse &ns3__GetServiceCapabilitiesResponse);
        //
        /// Web service synchronous operation 'GetActionTriggers' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetActionTriggers(_ns3__GetActionTriggers *ns3__GetActionTriggers, _ns3__GetActionTriggersResponse &ns3__GetActionTriggersResponse) { return this->GetActionTriggers(NULL, NULL, ns3__GetActionTriggers, ns3__GetActionTriggersResponse); }
        /// Web service synchronous operation 'GetActionTriggers' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetActionTriggers(const char *soap_endpoint_url, const char *soap_action, _ns3__GetActionTriggers *ns3__GetActionTriggers, _ns3__GetActionTriggersResponse &ns3__GetActionTriggersResponse) { return this->send_GetActionTriggers(soap_endpoint_url, soap_action, ns3__GetActionTriggers) || this->recv_GetActionTriggers(ns3__GetActionTriggersResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetActionTriggers' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetActionTriggers(const char *soap_endpoint_url, const char *soap_action, _ns3__GetActionTriggers *ns3__GetActionTriggers);
        /// Web service asynchronous operation 'recv_GetActionTriggers' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetActionTriggers(_ns3__GetActionTriggersResponse &ns3__GetActionTriggersResponse);
        //
        /// Web service synchronous operation 'CreateActionTriggers' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CreateActionTriggers(_ns3__CreateActionTriggers *ns3__CreateActionTriggers, _ns3__CreateActionTriggersResponse &ns3__CreateActionTriggersResponse) { return this->CreateActionTriggers(NULL, NULL, ns3__CreateActionTriggers, ns3__CreateActionTriggersResponse); }
        /// Web service synchronous operation 'CreateActionTriggers' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CreateActionTriggers(const char *soap_endpoint_url, const char *soap_action, _ns3__CreateActionTriggers *ns3__CreateActionTriggers, _ns3__CreateActionTriggersResponse &ns3__CreateActionTriggersResponse) { return this->send_CreateActionTriggers(soap_endpoint_url, soap_action, ns3__CreateActionTriggers) || this->recv_CreateActionTriggers(ns3__CreateActionTriggersResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CreateActionTriggers' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CreateActionTriggers(const char *soap_endpoint_url, const char *soap_action, _ns3__CreateActionTriggers *ns3__CreateActionTriggers);
        /// Web service asynchronous operation 'recv_CreateActionTriggers' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CreateActionTriggers(_ns3__CreateActionTriggersResponse &ns3__CreateActionTriggersResponse);
        //
        /// Web service synchronous operation 'DeleteActionTriggers' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteActionTriggers(_ns3__DeleteActionTriggers *ns3__DeleteActionTriggers, _ns3__DeleteActionTriggersResponse &ns3__DeleteActionTriggersResponse) { return this->DeleteActionTriggers(NULL, NULL, ns3__DeleteActionTriggers, ns3__DeleteActionTriggersResponse); }
        /// Web service synchronous operation 'DeleteActionTriggers' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteActionTriggers(const char *soap_endpoint_url, const char *soap_action, _ns3__DeleteActionTriggers *ns3__DeleteActionTriggers, _ns3__DeleteActionTriggersResponse &ns3__DeleteActionTriggersResponse) { return this->send_DeleteActionTriggers(soap_endpoint_url, soap_action, ns3__DeleteActionTriggers) || this->recv_DeleteActionTriggers(ns3__DeleteActionTriggersResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DeleteActionTriggers' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DeleteActionTriggers(const char *soap_endpoint_url, const char *soap_action, _ns3__DeleteActionTriggers *ns3__DeleteActionTriggers);
        /// Web service asynchronous operation 'recv_DeleteActionTriggers' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DeleteActionTriggers(_ns3__DeleteActionTriggersResponse &ns3__DeleteActionTriggersResponse);
        //
        /// Web service synchronous operation 'ModifyActionTriggers' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ModifyActionTriggers(_ns3__ModifyActionTriggers *ns3__ModifyActionTriggers, _ns3__ModifyActionTriggersResponse &ns3__ModifyActionTriggersResponse) { return this->ModifyActionTriggers(NULL, NULL, ns3__ModifyActionTriggers, ns3__ModifyActionTriggersResponse); }
        /// Web service synchronous operation 'ModifyActionTriggers' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ModifyActionTriggers(const char *soap_endpoint_url, const char *soap_action, _ns3__ModifyActionTriggers *ns3__ModifyActionTriggers, _ns3__ModifyActionTriggersResponse &ns3__ModifyActionTriggersResponse) { return this->send_ModifyActionTriggers(soap_endpoint_url, soap_action, ns3__ModifyActionTriggers) || this->recv_ModifyActionTriggers(ns3__ModifyActionTriggersResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ModifyActionTriggers' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ModifyActionTriggers(const char *soap_endpoint_url, const char *soap_action, _ns3__ModifyActionTriggers *ns3__ModifyActionTriggers);
        /// Web service asynchronous operation 'recv_ModifyActionTriggers' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ModifyActionTriggers(_ns3__ModifyActionTriggersResponse &ns3__ModifyActionTriggersResponse);
    };
#endif
