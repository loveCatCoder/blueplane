// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.5
// source: producer.proto

package pbproducer

import (
	pbmedia "blueplane/pbmedia"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetStreamInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId string `protobuf:"bytes,1,opt,name=ProducerId,proto3" json:"ProducerId,omitempty"`
	ConsumerId string `protobuf:"bytes,2,opt,name=ConsumerId,proto3" json:"ConsumerId,omitempty"`
}

func (x *GetStreamInfoReq) Reset() {
	*x = GetStreamInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_producer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamInfoReq) ProtoMessage() {}

func (x *GetStreamInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_producer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamInfoReq.ProtoReflect.Descriptor instead.
func (*GetStreamInfoReq) Descriptor() ([]byte, []int) {
	return file_producer_proto_rawDescGZIP(), []int{0}
}

func (x *GetStreamInfoReq) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *GetStreamInfoReq) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type GetStreamDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId string `protobuf:"bytes,1,opt,name=ProducerId,proto3" json:"ProducerId,omitempty"`
	ConsumerId string `protobuf:"bytes,2,opt,name=ConsumerId,proto3" json:"ConsumerId,omitempty"`
}

func (x *GetStreamDataReq) Reset() {
	*x = GetStreamDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_producer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamDataReq) ProtoMessage() {}

func (x *GetStreamDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_producer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamDataReq.ProtoReflect.Descriptor instead.
func (*GetStreamDataReq) Descriptor() ([]byte, []int) {
	return file_producer_proto_rawDescGZIP(), []int{1}
}

func (x *GetStreamDataReq) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *GetStreamDataReq) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type GetStreamInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId        string             `protobuf:"bytes,1,opt,name=ProducerId,proto3" json:"ProducerId,omitempty"`
	ConsumerId        string             `protobuf:"bytes,2,opt,name=ConsumerId,proto3" json:"ConsumerId,omitempty"`
	VideoCodingFormat string             `protobuf:"bytes,3,opt,name=VideoCodingFormat,proto3" json:"VideoCodingFormat,omitempty"`
	Width             int32              `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height            int32              `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	FrameRate         int32              `protobuf:"varint,6,opt,name=FrameRate,proto3" json:"FrameRate,omitempty"`
	Ret               *pbmedia.ComReturn `protobuf:"bytes,7,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *GetStreamInfoRsp) Reset() {
	*x = GetStreamInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_producer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamInfoRsp) ProtoMessage() {}

func (x *GetStreamInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_producer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamInfoRsp.ProtoReflect.Descriptor instead.
func (*GetStreamInfoRsp) Descriptor() ([]byte, []int) {
	return file_producer_proto_rawDescGZIP(), []int{2}
}

func (x *GetStreamInfoRsp) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *GetStreamInfoRsp) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *GetStreamInfoRsp) GetVideoCodingFormat() string {
	if x != nil {
		return x.VideoCodingFormat
	}
	return ""
}

func (x *GetStreamInfoRsp) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetStreamInfoRsp) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetStreamInfoRsp) GetFrameRate() int32 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *GetStreamInfoRsp) GetRet() *pbmedia.ComReturn {
	if x != nil {
		return x.Ret
	}
	return nil
}

type GetStreamDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64              `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	KeyFrame  bool               `protobuf:"varint,2,opt,name=KeyFrame,proto3" json:"KeyFrame,omitempty"`
	FrameType int32              `protobuf:"varint,3,opt,name=FrameType,proto3" json:"FrameType,omitempty"`
	FrameData []byte             `protobuf:"bytes,4,opt,name=FrameData,proto3" json:"FrameData,omitempty"`
	Ret       *pbmedia.ComReturn `protobuf:"bytes,5,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *GetStreamDataRsp) Reset() {
	*x = GetStreamDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_producer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamDataRsp) ProtoMessage() {}

func (x *GetStreamDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_producer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamDataRsp.ProtoReflect.Descriptor instead.
func (*GetStreamDataRsp) Descriptor() ([]byte, []int) {
	return file_producer_proto_rawDescGZIP(), []int{3}
}

func (x *GetStreamDataRsp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetStreamDataRsp) GetKeyFrame() bool {
	if x != nil {
		return x.KeyFrame
	}
	return false
}

func (x *GetStreamDataRsp) GetFrameType() int32 {
	if x != nil {
		return x.FrameType
	}
	return 0
}

func (x *GetStreamDataRsp) GetFrameData() []byte {
	if x != nil {
		return x.FrameData
	}
	return nil
}

func (x *GetStreamDataRsp) GetRet() *pbmedia.ComReturn {
	if x != nil {
		return x.Ret
	}
	return nil
}

var File_producer_proto protoreflect.FileDescriptor

var file_producer_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x70, 0x62, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x1a, 0x0b, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xf2, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4b, 0x65, 0x79,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x03, 0x72, 0x65, 0x74, 0x32, 0xaa, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x30, 0x01, 0x42, 0x16, 0x5a, 0x14, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2f, 0x70, 0x62, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_producer_proto_rawDescOnce sync.Once
	file_producer_proto_rawDescData = file_producer_proto_rawDesc
)

func file_producer_proto_rawDescGZIP() []byte {
	file_producer_proto_rawDescOnce.Do(func() {
		file_producer_proto_rawDescData = protoimpl.X.CompressGZIP(file_producer_proto_rawDescData)
	})
	return file_producer_proto_rawDescData
}

var file_producer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_producer_proto_goTypes = []interface{}{
	(*GetStreamInfoReq)(nil),  // 0: pbproducer.GetStreamInfoReq
	(*GetStreamDataReq)(nil),  // 1: pbproducer.GetStreamDataReq
	(*GetStreamInfoRsp)(nil),  // 2: pbproducer.GetStreamInfoRsp
	(*GetStreamDataRsp)(nil),  // 3: pbproducer.GetStreamDataRsp
	(*pbmedia.ComReturn)(nil), // 4: pbmedia.ComReturn
}
var file_producer_proto_depIdxs = []int32{
	4, // 0: pbproducer.GetStreamInfoRsp.ret:type_name -> pbmedia.ComReturn
	4, // 1: pbproducer.GetStreamDataRsp.ret:type_name -> pbmedia.ComReturn
	0, // 2: pbproducer.Producer.GetStreamInfo:input_type -> pbproducer.GetStreamInfoReq
	1, // 3: pbproducer.Producer.GetStreamData:input_type -> pbproducer.GetStreamDataReq
	2, // 4: pbproducer.Producer.GetStreamInfo:output_type -> pbproducer.GetStreamInfoRsp
	3, // 5: pbproducer.Producer.GetStreamData:output_type -> pbproducer.GetStreamDataRsp
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_producer_proto_init() }
func file_producer_proto_init() {
	if File_producer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_producer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_producer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_producer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_producer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_producer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_producer_proto_goTypes,
		DependencyIndexes: file_producer_proto_depIdxs,
		MessageInfos:      file_producer_proto_msgTypes,
	}.Build()
	File_producer_proto = out.File
	file_producer_proto_rawDesc = nil
	file_producer_proto_goTypes = nil
	file_producer_proto_depIdxs = nil
}
